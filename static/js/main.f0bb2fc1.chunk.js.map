{"version":3,"sources":["Header/Header.js","ContentItem/ContentItem.js","Content/Content.js","Footer/Footer.js","AddItem/AddItem.js","SearchItem/SearchItem.js","App.js","serviceWorker.js","index.js"],"names":["Header","ContentItem","index","name","quantity","onDecreaseQty","onIncreaseQty","onDeleteItem","className","onClick","Content","items","map","id","key","Footer","totalItemsQuantity","colSpan","AddItem","state","onChangeName","e","setState","target","value","onSubmit","preventDefault","props","onAddItem","this","type","onChange","React","Component","SearchItem","search","onInputHandle","onSearchChange","getNewItem","itemName","Math","random","toString","substr","itemsData","App","searchItemsText","getNewItemsData","newItem","slice","oldItem","prevQuantity","newItemsData","getFilteredItems","filter","toLowerCase","indexOf","searchID","findIndex","newArray","newTotalItemsQuantity","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.f0bb2fc1.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction Header() {\r\n  return (\r\n    <thead>\r\n      <tr>\r\n        <td>â„–</td>\r\n        <td>Item</td>\r\n        <td>Quantity & Actions</td>\r\n      </tr>\r\n    </thead>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\n\r\nimport \"./ContentItem.css\";\r\n\r\nfunction ContentItem({\r\n  index,\r\n  name,\r\n  quantity,\r\n  onDecreaseQty,\r\n  onIncreaseQty,\r\n  onDeleteItem\r\n}) {\r\n  return (\r\n    <tr>\r\n      <td>{index}</td>\r\n      <td>{name}</td>\r\n      <td>\r\n        <button\r\n          className=\"btn-content btn-content-minus\"\r\n          onClick={onDecreaseQty}\r\n        >\r\n          &ndash;\r\n        </button>\r\n        <span className=\"content-qty\">{quantity}</span>\r\n        <button\r\n          className=\"btn-content btn-content-plus\"\r\n          onClick={onIncreaseQty}\r\n        >\r\n          &#10010;\r\n        </button>\r\n        <button\r\n          className=\"btn-content btn-content-delete\"\r\n          onClick={onDeleteItem}\r\n        >\r\n          &#10006;\r\n        </button>\r\n      </td>\r\n    </tr>\r\n  );\r\n}\r\n\r\nexport default ContentItem;\r\n","import React from \"react\";\r\n\r\nimport ContentItem from \"../ContentItem/ContentItem\";\r\n\r\nconst Content = ({ items, onDecreaseQty, onIncreaseQty, onDeleteItem }) => (\r\n  <tbody>\r\n    {items.map(({ name, quantity, id }, index) => (\r\n      <ContentItem\r\n        id={id}\r\n        key={id}\r\n        index={index + 1}\r\n        name={name}\r\n        quantity={quantity}\r\n        onDecreaseQty={() => onDecreaseQty(index)}\r\n        onIncreaseQty={() => onIncreaseQty(index)}\r\n        onDeleteItem={() => onDeleteItem(id)}\r\n      />\r\n    ))}\r\n  </tbody>\r\n);\r\n\r\nexport default Content;\r\n","import React from \"react\";\r\n\r\nimport \"./Footer.css\";\r\n\r\nfunction Footer({ totalItemsQuantity }) {\r\n  return (\r\n    <tfoot>\r\n      <tr>\r\n        <td className=\"footer-total\" colSpan=\"2\">\r\n          Total:\r\n        </td>\r\n        <td className=\"footer-qty\">{totalItemsQuantity}</td>\r\n      </tr>\r\n    </tfoot>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","import React from \"react\";\r\n\r\nimport \"./AddItem.css\";\r\n\r\nclass AddItem extends React.Component {\r\n  state = {\r\n    name: \"\"\r\n  };\r\n\r\n  onChangeName = e => {\r\n    this.setState({\r\n      name: e.target.value\r\n    });\r\n  };\r\n\r\n  onSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.onAddItem(this.state.name);\r\n    this.setState({\r\n      name: \"\"\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form className=\"add-item-form\" onSubmit={this.onSubmit}>\r\n        <input\r\n          className=\"add-item-input\"\r\n          type=\"text\"\r\n          onChange={this.onChangeName}\r\n          value={this.state.name}\r\n        />\r\n        <button className=\"btn-add-item\">Add Item</button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddItem;\r\n","import React from \"react\";\r\nimport \"./SearchItem.css\";\r\n\r\nclass SearchItem extends React.Component {\r\n  state = {\r\n    search: \"\"\r\n  };\r\n\r\n  onInputHandle = e => {\r\n    const search = e.target.value;\r\n    this.setState({ search });\r\n    this.props.onSearchChange(search);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form>\r\n        <label className=\"search-label\">Search Item:</label>\r\n        <input\r\n          className=\"search-input\"\r\n          type=\"text\"\r\n          value={this.state.search}\r\n          onChange={this.onInputHandle}\r\n        />\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SearchItem;\r\n","import React from \"react\";\nimport Header from \"./Header/Header\";\nimport Content from \"./Content/Content\";\nimport Footer from \"./Footer/Footer\";\nimport AddItem from \"./AddItem/AddItem\";\nimport SearchItem from \"./SearchItem/SearchItem\";\n\nimport \"./App.css\";\n\nconst itemsNames = [\n  \"Beef\",\n  \"Potato\",\n  \"Tomato\",\n  \"Bread\",\n  \"Apple\",\n  \"Juice\",\n  \"Coffee\",\n  \"Cookies\"\n];\n\nconst getNewItem = itemName => ({\n  id: Math.random().toString(36).substr(2, 9),\n  name: itemName,\n  quantity: 0\n});\n\nconst itemsData = itemsNames.map(getNewItem);\n\nclass App extends React.Component {\n  state = {\n    items: itemsData,\n    totalItemsQuantity: 0,\n    searchItemsText: \"\"\n  };\n\n  getNewItemsData = (newItem, index) => {\n    const { items } = this.state;\n    const newArray = [\n      ...items.slice(0, index),\n      newItem,\n      ...items.slice(index + 1)\n    ];\n\n    return newArray;\n  };\n\n  onDecreaseQty = index => {\n    const oldItem = this.state.items[index];\n    const { quantity: prevQuantity } = oldItem;\n\n    if (prevQuantity > 0) {\n      const newItem = { ...oldItem, quantity: prevQuantity - 1 };\n      const newItemsData = this.getNewItemsData(newItem, index);\n\n      this.setState(state => {\n        return {\n          items: newItemsData,\n          totalItemsQuantity: state.totalItemsQuantity - 1\n        };\n      });\n    }\n  };\n\n  onIncreaseQty = index => {\n    const oldItem = this.state.items[index];\n    const { quantity: prevQuantity } = oldItem;\n\n    const newItem = { ...oldItem, quantity: prevQuantity + 1 };\n    const newItemsData = this.getNewItemsData(newItem, index);\n\n    this.setState(state => {\n      return {\n        items: newItemsData,\n        totalItemsQuantity: state.totalItemsQuantity + 1\n      };\n    });\n  };\n\n  onAddItem = newItem => {\n    this.setState(({ items }) => ({\n      items: [...items, newItem]\n    }));\n  };\n\n  onSearchChange = searchItemsText => {\n    this.setState({ searchItemsText });\n  };\n\n  getFilteredItems = () => {\n    const { items, searchItemsText } = this.state;\n\n    return items.filter(\n      ({ name }) =>\n        name.toLowerCase().indexOf(searchItemsText.toLowerCase()) > -1\n    );\n  };\n\n  onDeleteItem = id => {\n    const { items, totalItemsQuantity } = this.state;\n\n    const searchID = items.findIndex(items => {\n      return items.id === id;\n    });\n\n    const newArray = [\n      ...items.slice(0, searchID),\n      ...items.slice(searchID + 1)\n    ];\n\n    const deleteQty = items[searchID].quantity;\n    const newTotalItemsQuantity = totalItemsQuantity - deleteQty;\n\n    this.setState(state => {\n      return {\n        items: newArray,\n        totalItemsQuantity: newTotalItemsQuantity\n      };\n    });\n  };\n\n  render() {\n    const {\n      state: { items, totalItemsQuantity, searchItemsText },\n      getFilteredItems,\n      onSearchChange,\n      onDecreaseQty,\n      onIncreaseQty,\n      onAddItem,\n      onDeleteItem\n    } = this;\n\n    return (\n      <div className=\"cart\">\n        <SearchItem onSearchChange={onSearchChange} />\n        <table>\n          <Header />\n          <Content\n            items={searchItemsText ? getFilteredItems() : items}\n            onDecreaseQty={onDecreaseQty}\n            onIncreaseQty={onIncreaseQty}\n            onDeleteItem={onDeleteItem}\n          />\n          <Footer totalItemsQuantity={totalItemsQuantity} />\n        </table>\n        <AddItem onAddItem={itemName => onAddItem(getNewItem(itemName))} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}